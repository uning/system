#!/bin/bash
#秦振华 2007-04-23
#计算两个时间点之间的时间间隔
#common common
#秦振华
#"1.1.3 Build on 2007.05.11"
#inuse
Tool_Version="1.1.4 Build on 2008.12.10"

#使用的外部转换程序
PROG_convtime="convert_time"

#命令所在路径 (shell中无法使用"~")
toolsPath=`/usr/bin/which $0 2>/dev/null`
if [ $? -ne 0 ]
then
	toolsPath="`pwd`/"
else
	toolsPath=`dirname $toolsPath`
fi

#默认输出格式
out_format="%s"

function version()
{
	echo -e "Version:\t$Tool_Version"
}

function usage()
{
	echo -e "Usage:\t`basename $0` begin_time end_time [<output format>]"
	version
	cat <<USAGE

	功能:	计算两个时间点间的持续时间
		默认以"秒"为单位输出结果(即指定输出格式为"%s")

	时间输入格式为:
	"YYYY-MM-DD HH:MM:SS"
	"MM-DD HH:MM:SS" (默认为当前年)
	以" "或":"或"-"三种分隔符分割的 5段/6段 格式 (即可缺少年 缺少时默认为当前年)

	output_format: 以指定格式输出 可使用变量: %d(天) %h(小时) %m(分钟) %s(秒) --需要输出%时 请使用%%
	   若输出的最高单位非%d时 则将高单位的数值自动向低单位转换
	   输出的其他单位 若未指定 则未指定单位数量将直接舍去 不加入低单位中
	   比如: 计算结果为(1天2小时3分钟4秒)
		 指定输出格式为"%d天%h小时%m分钟%s秒"时 输出: "1天2小时3分钟4秒"
		 指定输出格式为"%h小时%s秒"时 输出: "26小时4秒"

	返回值:
	0  : 正确返回
	1  : 参数错误
	2  : 输出格式指定错误
	-1 : 时间输入错误/时间转换失败
	-2 : 结束时间小于开始时间
	127 : 缺少外部调用文件

USAGE
}

if [ $# -eq 1 ]
then
	out_format="%s"
	begin="1970-01-01 08:00:00"
        end=$1
elif [ $# -eq 2 ]
then
	echo $2 | grep "%" > /dev/null
	if [ $? -eq 1 ]
	then
		out_format="%s"
		begin=$1
		end=$2
	else
		out_format="$2"
		begin="1970-01-01 08:00:00"
		end=$1
	fi
elif [ $# -eq 3 ]
then
	out_format="$3"
	begin=$1
	end=$2
else
	usage
	exit 2
fi

#while [ "$1" != "" ]
#do
#	case $1 in
#	-o)	shift
#		if [ -z "$1" ]
#		then
#			echo "Error : 输出格式参数错误"
#			exit 2
#		else
#			out_format="$1"
#		fi;;
#	-h)	usage;;
#	-v)	version;;
#	*)	if [ -z "$begin" ]
#		then
#			begin=$1
#		elif [ -z "$end" ]
#		then
#			end=$1
#		else
#			echo "Error : 过多的参数"
#			exit 1
#		fi;;
#	esac
#	shift
#done
#
#if [ -z "$begin" -o -z "$end" ]
#then
#	usage
#fi

Year="`date +%Y`"

#删除结尾多余的":" 标准log输出中的时间是以:结束的
begin="`echo "$begin" | sed 's/:$//'`"
end="`echo "$end" | sed 's/:$//'`"

begin=`echo $begin | awk -F" |:|-|/" 'BEGIN{OFS=":"}{$1=$1}NF==5{print '$Year',$0}NF==6{print}'`
end=`echo $end | awk -F" |:|-|/" 'BEGIN{OFS=":"}{$1=$1}NF==5{print '$Year',$0}NF==6{print}'`

check_begin=`echo $begin | awk -F':' '($1<1||$2<1||$2>12||$3<1||$3>31||$4<0||$4>23||$5<0||$5>59||$6<0||$6>59){print "error"}'`
check_end=`echo $end | awk -F':' '($1<1||$2<1||$2>12||$3<1||$3>31||$4<0||$4>23||$5<0||$5>59||$6<0||$6>59){print "error"}'`
if [ ! -z "$check_begin" ] || [ ! -z "$check_end" ]
then
	echo "Error : 时间格式非法"
	exit -1
fi

#检查外部程序是否能正确调用
if [ ! -e $toolsPath/$PROG_convtime ]
then
	echo "Error : 无法找到 <$toolsPath/$PROG_convtime>"
	exit 127
fi

#使用程序转换时间
sec_b=`$toolsPath/$PROG_convtime -d "$begin"`
sec_e=`$toolsPath/$PROG_convtime -d "$end"`

#返回-1 表明转换失败
if [ "$sec_b" -eq -1 ] || [ "$sec_e" -eq -1 ]
then
	echo "Error : 时间输入错误"
	exit -1
fi

#计算相差时间 单位为秒
dura_sec=`expr $sec_e - $sec_b`
if [ "$dura_sec" -lt 0 ]
then
	echo "Error : 结束时间小于开始时间"
	exit -2
fi

#支持的输出格式
format="%s %m %h %d"

#检测是否具有无法识别的输出变量
test_format="$out_format"
i=3
high=$i
for f in $format
do
	if echo "$test_format" | grep "$f" &>/dev/null
	then
		high=$i
		test_format="`echo "$test_format" | sed 's/'$f'//g'`"
	fi
	i=`expr $i - 1`
done
test_format="`echo "$test_format" | sed 's/%%//g'`"
if echo "$test_format" | grep "%" &>/dev/null
then
	echo "Error : 输出格式参数存在无法识别的变量定义"
	exit 2
fi

#计算各个单位的数值
dura=`echo "$dura_sec" | awk '
BEGIN{ time[0]=0; time[1]=0; time[2]=0; time[3]=0; }
{
	time[3]=$1;
	for (i=3; i>1; i--)
		if (i>'$high')
		{ time[i-1]=int(time[i]/60); time[i]=time[i]%60; }
		else { break; }
	if (i>'$high')
	{ time[0]=int(time[1]/24); time[1]=time[1]%24; }
}
END{ print time[0], time[1], time[2], time[3] }'`

#替换实际输出
i=0
output="`echo $out_format | sed 's/%%/%/g'`"
for t in $dura
do
	case $i in
	0)	output="`echo $output | sed 's/%d/'$t'/g'`";;
	1)	output="`echo $output | sed 's/%h/'$t'/g'`";;
	2)	output="`echo $output | sed 's/%m/'$t'/g'`";;
	3)	output="`echo $output | sed 's/%s/'$t'/g'`";;
	esac
	i=`expr $i + 1`
done

echo $output

exit 0
